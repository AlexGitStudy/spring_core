<?xml version="1.0" encoding="UTF-8"?><beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"       xmlns="http://www.springframework.org/schema/beans"       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">    <import resource="sony_context.xml"/>    <import resource="toshiba_context.xml"/>    <import resource="db_context.xml"/><!-- depends-on="databaseBean" в данном случае вместо databaseBean можно поставить и другой бин, например наш t1000Empty! Или можно строить цепочки наследования первый зависит от второго, второй от 3 и все эти бины будут по  цепочке загружаться-->    <bean id="t1000" class="com.github.alexgitstudy.project.robot.impls.robot.ModelT1000"          parent="baseModal" scope="prototype" autowire="byType"       >        <!--<constructor-arg value="silver" index="3"/>-->        <!--<constructor-arg value="2006" index="4" type="int"/>-->        <!--<constructor-arg value="true" index="5"/>-->    </bean>    <!--Чтобы не прописывать конструктор 2 раза мы просто его наследуем через parent="baseModal" -->    <bean id="baseModal" abstract="true">        <!--<constructor-arg ref="sonyHand"/>-->        <!--<constructor-arg ref="sonyLeg"/>-->        <!--<constructor-arg ref="toshibaHead"/>--><!--&lt;!&ndash;возможно переопределять свойство, заменить переменную заданную в конструкторе через сеттер&ndash;&gt;-->        <!--<property name="head" ref="sonyHead"/>-->    </bean></beans>